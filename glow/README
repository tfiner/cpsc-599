CPSC-599
Professor Michael Shafae
Tim Finer

Summary:
Reads a scene, renders an image, saves it to disk.


Building:

Prerequisites (available on macports, and other repositories)
Clang       3.4+
CMake       2.6+
Boost       1.54+
Eigen       3+
libPNG      1.5+

Other Libraries

libnoise    1.0.0 A library for generating all kinds of noise.  http://libnoise.sourceforge.net/
            I made a CMake project file for this as a static library and have included it as well.

cajun       2.0.2 A library for serializing JSON.
            http://sourceforge.net/projects/cajun-jsonapi/


I'm using CMake to build the raytracer.  This will generate a variety of other types of build files (Unix Makefiles, XCode projects, Visual Studio Solutions, etc.).

Build an out-of-place build (works with absolute paths too):

1. cd to another directory
2. ccmake <Path to CMakeFiles.txt>
This will run an ncurses interface.
3. 'c' to configure.
4. Enter at CMAKE_BUILD_TYPE, type in Release, then enter.
5. 't'oggle advanced mode.

6. Set the following settings (by hitting enter, typing, then enter).

Also, ccmake works with readline, and auto expands paths if you hit the Tab key.
BOOST_INCLUDE_DIR   <path to boost>
CMAKE_CXX_COMPILER  <path to clang 3.4+>
CMAKE_C_COMPILER    <path to clang 3.4+>
EIGEN3_INCLUDE_DIR  <path to Eigen 3>

Mine looks like this:
BOOST_INCLUDE_DIR       /opt/local/include/boost  
CMAKE_CXX_COMPILER      /opt/local/bin/clang++-mp-3.4
CMAKE_C_COMPILER        /opt/local/bin/clang-mp-3.4
EIGEN3_INCLUDE_DIR      /opt/local/include/eigen3

7. 'g' to generate

8. Run make:
make -j 8 (I recommend this number to be the number of cores)

Libraries Used:
Boost 1.54+
Eigen 
libPNG
optionparser.h by Matthias S. Benkmann
libnoise
cajun